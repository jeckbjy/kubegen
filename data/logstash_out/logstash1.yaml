apiVersion: v1
kind: ConfigMap
metadata:
  name: pipline-word
data:
  logstash.conf: |-
    filter {
        json{
        source => "message"
        skip_on_invalid_json => true
        remove_field => [ "message" ]
        }
    }
    input {
        http {
        port => 8100
        }
    }
    output {
        s3{
        access_key_id => "asdf"
        secret_access_key => "asdf"
        region => "us-east-1"
        bucket => "bucket-loggly-bi"
        prefix => "logstash/%{+YYYY}-%{+MM}-%{+dd}"
        size_file => 1048576000
        time_file => 10
        canned_acl => "bucket-owner-full-control"
        encoding =>"gzip"
        endpoint => "https://s3.us-east-1.amazonaws.com"
        codec => "json_lines"
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-word
data:
  logstash.yml: |
    http.host: 0.0.0.0
  pipelines.yml: |-
    - pipeline.id: main
      path.config: "/usr/share/logstash/pipeline"

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: logstash-word
spec:
  replicas: 6
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: logstash-word
    spec:
      containers:
      - name: logstash-word
        image: docker.elastic.co/logstash/logstash:7.0.1
        imagePullPolicy: Always
        volumeMounts:
        - name: pipline-word
          mountPath: /usr/share/logstash/pipeline
        - name: config-word
          mountPath: /usr/share/logstash/config
        resources:
          requests:
            cpu: "1"
            memory: 1Gi
      volumes:
      - name: pipline-word
        configMap:
          name: pipline-word
      - name: config-word
        configMap:
          name: config-word

---
kind: Service
apiVersion: v1
metadata:
  name: logstash-word
spec:
  selector:
    app: logstash-word
  ports:
  - protocol: TCP
    name: proxy
    port: 80
    targetPort: 8100
  type: ClusterIP
